build-linux:
  stage: build
  script:
    - module load anaconda/3
    - conda activate shennong-ci
    - conda env update -n shennong-ci -f environment.yml
    - python setup.py install

test-linux:
  stage: test
  script:
    - module load anaconda/3
    - conda activate shennong-ci
    - python setup.py test
  needs: ["build-linux"]

# build-osx:
#   tags:
#    - macos
#   stage: build
#   script:
#    - conda activate shennong
#    - sed '/pykaldi/d' environment.yml > environment.macos.yml
#    - conda env update -n shennong -f environment.macos.yml
#    - rm -f environment.macos.yml
#    - python setup.py install

# test-osx:
#   tags:
#    - macos
#   stage: test
#   script:
#    - conda activate shennong
#    - python setup.py test
#   needs: ["build-osx"]

# documentation is available on https://docs.cognitive-ml.fr/shennong
documentation:
  stage: deploy
  only:
    refs:
      - master
  script:
    - module load anaconda/3
    - module load texlive/2018
    - conda activate shennong-ci
    - sphinx-build doc/source doc/build
    - scp -r doc/build/* cognitive-ml.fr:/var/www/docs.cognitive-ml.fr/shennong
  needs: ["test-linux"]

# shennong package is available on oberon with "conda activate shennong"
deploy-oberon:
  stage: deploy
  only:
    refs:
      - master
  script:
    - module load anaconda/3
    - cd /shared/apps/shennong
    - git pull origin master
    - conda env update -n shennong -f environment.yml
    - conda activate shennong
    - python setup.py install
    - python setup.py test
  needs: ["test-linux"]

# shennong package available on conda with "conda install -c coml
# shennong". Build and upload the package only on new git tags or
# manual triggers.
deploy-conda:
  stage: deploy
  only:
    - tags
    - triggers
  script:
    - module load anaconda/3
    - conda activate shennong-ci
    - cd .conda
    - conda build -c coml --user coml --token $CONDA_TOKEN --skip-existing .
    - conda build purge
  needs: ["test-linux"]
